/*

	About: vehicle component system
	Author:	ziggi
	Thanks AirKite for component's data

*/

#if defined _z_vehicle_component_included
	#endinput
#endif

#define _z_vehicle_component_included
#pragma library z_vehicle_component

/*
	Defines
*/

#define INVALID_COMPONENT_ID    -1
#define MAX_COMPONENTS          35
#define MAX_COMPONENT_NAME      64
#define MAX_COMPONENT_TYPES     14
#define MAX_COMPONENT_TYPE_NAME 16

/*
	Component types
*/

static gComponentType[MAX_COMPONENT_TYPES][MAX_COMPONENT_TYPE_NAME char] = {
	!"Spoiler",
	!"Hood",
	!"Roof",
	!"Sideskirt",
	!"Lamps",
	!"Nitro",
	!"Exhaust",
	!"Wheels",
	!"Stereo",
	!"Hydraulics",
	!"Front Bumper",
	!"Rear Bumper",
	!"Vent Right",
	!"Vent Left"
};

/*
	Components name
*/

static gComponentName[][MAX_COMPONENT_NAME char] = {
	!"Pro Spoiler",
	!"Win Spoiler",
	!"Drag Spoiler",
	!"Alpha Spoiler",
	!"Champ Scoop Hood",
	!"Fury Scoop Hood",
	!"Roof Scoop",
	!"Right Sideskirt",
	!"5x Nitro",
	!"2x Nitro",
	!"10x Nitro",
	!"Race Scoop Hood",
	!"Worx Scoop Hood",
	!"Round Fog Lamps",
	!"Champ Spoiler",
	!"Race Spoiler",
	!"Worx Spoiler",
	!"Left Sideskirt",
	!"Upswept Exhaust",
	!"Twin Exhaust",
	!"Large Exhaust",
	!"Medium Exhaust",
	!"Small Exhaust",
	!"Fury Spoiler",
	!"Square Fog Lamps",
	!"Offroad Wheels",
	!"Right Alien Sideskirt 'Sultan'",
	!"Left Alien Sideskirt 'Sultan'",
	!"Alien Exhaust 'Sultan'",
	!"X-Flow Exhaust 'Sultan'",
	!"Left X-Flow Sideskirt 'Sultan'",
	!"Right X-Flow Sideskirt 'Sultan'",
	!"Alien Roof Vent 'Sultan'",
	!"X-Flow Roof Vent 'Sultan'",
	!"Alien Exhaust 'Elegy'",
	!"X-Flow Roof Vent 'Elegy'",
	!"Right Alien Sideskirt 'Elegy'",
	!"X-Flow Exhaust 'Elegy'",
	!"Alien Roof Vent 'Elegy'",
	!"Left X-Flow Sideskirt 'Elegy'",
	!"Left Alien Sideskirt 'Elegy'",
	!"Right X-Flow Sideskirt 'Elegy'",
	!"Right Chrome Sideskirt 'Broadway'",
	!"Slamin Exhaust 'Broadway'",
	!"Chrome Exhaust 'Broadway'",
	!"X-Flow Exhaust 'Flash'",
	!"Alien Exhaust 'Flash'",
	!"Right Alien Sideskirt 'Flash'",
	!"Right X-Flow Sideskirt 'Flash'",
	!"Alien Spoiler 'Flash'",
	!"X-Flow Spoiler 'Flash'",
	!"Left Alien Sideskirt 'Flash'",
	!"Left X-Flow Sideskirt 'Flash'",
	!"X-Flow Roof 'Flash'",
	!"Alien Roof 'Flash'",
	!"Alien Roof 'Stratum'",
	!"Right Alien Sideskirt 'Stratum'",
	!"Right X-Flow Sideskirt 'Stratum'",
	!"Alien Spoiler 'Stratum'",
	!"X-Flow Exhaust 'Stratum'",
	!"X-Flow Spoiler 'Stratum'",
	!"X-Flow Roof 'Stratum'",
	!"Left Alien Sideskirt 'Stratum'",
	!"Left X-Flow Sideskirt 'Stratum'",
	!"Alien Exhaust 'Stratum'",
	!"Alien Exhaust 'Jester'",
	!"X-Flow Exhaust 'Jester'",
	!"Alien Roof 'Jester'",
	!"X-Flow Roof 'Jester'",
	!"Right Alien Sideskirt 'Jester'",
	!"Right X-Flow Sideskirt 'Jester'",
	!"Left Alien Sideskirt 'Jester'",
	!"Left X-Flow Sideskirt 'Jester'",
	!"Shadow Wheels",
	!"Mega Wheels",
	!"Rimshine Wheels",
	!"Wires Wheels",
	!"Classic Wheels",
	!"Twist Wheels",
	!"Cutter Wheels",
	!"Switch Wheels",
	!"Grove Wheels",
	!"Import Wheels",
	!"Dollar Wheels",
	!"Trance Wheels",
	!"Atomic Wheels",
	!"Stereo Sound",
	!"Hydraulics",
	!"Alien Roof 'Uranus'",
	!"X-Flow Exhaust 'Uranus'",
	!"Right Alien Sideskirt 'Uranus'",
	!"X-Flow Roof 'Uranus'",
	!"Alien Exhaust 'Uranus'",
	!"Left X-Flow Sideskirt 'Uranus'",
	!"Left Alien Sideskirt 'Uranus'",
	!"Right X-Flow Sideskirt 'Uranus'",
	!"Ahab Wheels",
	!"Virtual Wheels",
	!"Access Wheels",
	!"Left Chrome Sideskirt 'Broadway'",
	!"Chrome Grill Bullbar 'Remington'",
	!"Left 'Chrome Flames' Sideskirt 'Remington'",
	!"Left 'Chrome Strip' Sideskirt 'Savanna'",
	!"Corvetible Roof 'Blade'",
	!"Chrome Exhaust 'Blade'",
	!"Slamin Exhaust 'Blade'",
	!"Right 'Chrome Arches' Sideskirt 'Remington'",
	!"Left 'Chrome Strip' Sideskirt 'Blade'",
	!"Right 'Chrome Strip' Sideskirt 'Blade'",
	!"Chrome Rear Bullbars 'Slamvan'",
	!"Slamin Rear Bullbars 'Slamvan'",
	!"Little Front Sign? 'Slamvan'",
	!"Little Front Sign? 'Slamvan'",
	!"Chrome Exhaust 'Slamvan'",
	!"Slamin Exhaust 'Slamvan'",
	!"Chrome Front Bullbars 'Slamvan'",
	!"Slamin Front Bullbars 'Slamvan'",
	!"Chrome Front Bumper 'Slamvan'",
	!"Right 'Chrome Trim' Sideskirt 'Slamvan'",
	!"Right 'Wheelcovers' Sideskirt 'Slamvan'",
	!"Left 'Chrome Trim' Sideskirt 'Slamvan'",
	!"Left 'Wheelcovers' Sideskirt 'Slamvan'",
	!"Right 'Chrome Flames' Sideskirt 'Remington'",
	!"Bullbar Chrome Bars 'Remington'",
	!"Left 'Chrome Arches' Sideskirt 'Remington'",
	!"Bullbar Chrome Lights 'Remongton'",
	!"Chrome Exhaust 'Remington'",
	!"Slamin Exhaust 'Remington'",
	!"Vinyl Hardtop 'Blade'",
	!"Chrome Exhaust 'Savanna'",
	!"Hardtop Roof 'Savanna'",
	!"Softtop Roof 'Savanna'",
	!"Slamin Exhaust 'Savanna'",
	!"Right 'Chrome Strip' Sideskirt 'Savanna'",
	!"Right 'Chrome Strip' Sideskirt 'Tornado'",
	!"Slamin Exhaust 'Tornado'",
	!"Chrome Exhaust 'Tornado'",
	!"Left 'Chrome Strip' Sideskirt 'Tornado'",
	!"Alien Spoiler 'Sultan'",
	!"X-Flow Spoiler 'Sultan'",
	!"X-Flow Rear Bumper 'Sultan'",
	!"Alien Rear Bumper 'Sultan'",
	!"Left Oval Vents",
	!"Right Oval Vents",
	!"Left Square Vents",
	!"Right Square Vents",
	!"X-Flow Spoiler 'Elegy'",
	!"Alien Spoiler 'Elegy'",
	!"X-Flow Rear Bumper 'Elegy'",
	!"Alien Rear Bumper 'Elegy'",
	!"Alien Rear Bumper 'Flash'",
	!"X-Flow Rear Bumper 'Flash'",
	!"X-Flow Front Bumper 'Flash'",
	!"Alien Front Bumper 'Flash'",
	!"Alien Rear Bumper 'Stratum'",
	!"Alien Front Bumper 'Stratum'",
	!"X-Flow Rear Bumper 'Stratum'",
	!"X-Flow Front Bumper 'Stratum'",
	!"X-Flow Spoiler 'Jester'",
	!"Alien Rear Bumper 'Jester'",
	!"Alien Front Bumper 'Jester'",
	!"X-Flow Rear Bumper 'Jester'",
	!"Alien Spoiler 'Jester'",
	!"X-Flow Spoiler 'Uranus'",
	!"Alien Spoiler 'Uranus'",
	!"X-Flow Front Bumper 'Uranus'",
	!"Alien Front Bumper 'Uranus'",
	!"X-Flow Rear Bumper 'Uranus'",
	!"Alien Rear Bumper 'Uranus'",
	!"Alien Front Bumper 'Sultan'",
	!"X-Flow Front Bumper 'Sultan'",
	!"Alien Front Bumper 'Elegy'",
	!"X-Flow Front Bumper 'Elegy'",
	!"X-Flow Front Bumper 'Jester'",
	!"Chrome Front Bumper 'Broadway'",
	!"Slamin Front Bumper 'Broadway'",
	!"Chrome Rear Bumper 'Broadway'",
	!"Slamin Rear Bumper 'Broadway'",
	!"Slamin Rear Bumper 'Remington'",
	!"Chrome Front Bumper 'Remington'",
	!"Chrome Rear Bumper 'Remington'",
	!"Slamin Front Bumper 'Blade'",
	!"Chrome Front Bumper 'Blade'",
	!"Slamin Rear Bumper 'Blade'",
	!"Chrome Rear Bumper 'Blade'",
	!"Slamin Front Bumper 'Remington'",
	!"Slamin Rear Bumper 'Savanna'",
	!"Chrome Rear Bumper 'Savanna'",
	!"Slamin Front Bumper 'Savanna'",
	!"Chrome Front Bumper 'Savanna'",
	!"Slamin Front Bumper 'Tornado'",
	!"Chrome Front Bumper 'Tornado'",
	!"Chrome Rear Bumper 'Tornado'",
	!"Slamin Rear Bumper 'Tornado'"
};

/*
	Components array
*/

#define ZVEHCOMP_ADD_COMPONENT(%0,%1,%2,%3) ((%3) | ((%2) << 8) | ((%1) << 16) | ((%0) << 24))

static gComponents[212][MAX_COMPONENTS char] = {
	// 400
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 13),
		ZVEHCOMP_ADD_COMPONENT(18, 19, 20, 21),
		ZVEHCOMP_ADD_COMPONENT(24, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 401
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 4, 5),
		ZVEHCOMP_ADD_COMPONENT(6, 7, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 13, 17, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 402
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 403
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 404
	{
		ZVEHCOMP_ADD_COMPONENT(0, 2, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 13, 16),
		ZVEHCOMP_ADD_COMPONENT(17, 19, 20, 21),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 0, 0),
	},
	// 405
	{
		ZVEHCOMP_ADD_COMPONENT(0, 1, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 14, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 21, 23, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 406
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 407
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 408
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 409
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 410
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 13, 17),
		ZVEHCOMP_ADD_COMPONENT(19, 20, 21, 23),
		ZVEHCOMP_ADD_COMPONENT(24, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 411
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 412
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 413
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 414
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 415
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 17, 18),
		ZVEHCOMP_ADD_COMPONENT(19, 23, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 416
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 417
	{
	},
	// 418
	{
		ZVEHCOMP_ADD_COMPONENT(2, 6, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 16, 20, 21),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 0, 0),
	},
	// 419
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 420
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 4, 5),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 19),
		ZVEHCOMP_ADD_COMPONENT(21, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 421
	{
		ZVEHCOMP_ADD_COMPONENT(0, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(14, 16, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 21, 23, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 422
	{
		ZVEHCOMP_ADD_COMPONENT(7, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(13, 17, 19, 20),
		ZVEHCOMP_ADD_COMPONENT(21, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 423
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 424
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 425
	{
	},
	// 426
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 4, 5),
		ZVEHCOMP_ADD_COMPONENT(6, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(19, 21, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 427
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 428
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 429
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 430
	{
	},
	// 431
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 432
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 433
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 434
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 435
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 436
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 6, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 13),
		ZVEHCOMP_ADD_COMPONENT(17, 19, 20, 21),
		ZVEHCOMP_ADD_COMPONENT(22, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 437
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 438
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 439
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 13, 17),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 440
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 441
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 442
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 443
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 444
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 445
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 446
	{
	},
	// 447
	{
	},
	// 448
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 449
	{
	},
	// 450
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 451
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 452
	{
	},
	// 453
	{
	},
	// 454
	{
	},
	// 455
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 456
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 457
	{
	},
	// 458
	{
	},
	// 459
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 460
	{
	},
	// 461
	{
	},
	// 462
	{
	},
	// 463
	{
	},
	// 464
	{
	},
	// 465
	{
	},
	// 466
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 467
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 468
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 469
	{
	},
	// 470
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 471
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 472
	{
	},
	// 473
	{
	},
	// 474
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 475
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 476
	{
	},
	// 477
	{
		ZVEHCOMP_ADD_COMPONENT(6, 7, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 17, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 21, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 478
	{
		ZVEHCOMP_ADD_COMPONENT(4, 5, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 12, 13, 20),
		ZVEHCOMP_ADD_COMPONENT(21, 22, 24, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 479
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 480
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 481
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 482
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 483
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 484
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 485
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 486
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 487
	{
	},
	// 488
	{
	},
	// 489
	{
		ZVEHCOMP_ADD_COMPONENT(0, 2, 4, 5),
		ZVEHCOMP_ADD_COMPONENT(6, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(13, 16, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 24, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 490
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 491
	{
		ZVEHCOMP_ADD_COMPONENT(3, 7, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 14, 17, 18),
		ZVEHCOMP_ADD_COMPONENT(19, 20, 21, 23),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 142, 143),
		ZVEHCOMP_ADD_COMPONENT(144, 145, 0, 0),
	},
	// 492
	{
		ZVEHCOMP_ADD_COMPONENT(0, 4, 5, 6),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 16),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 0, 0),
	},
	// 493
	{
	},
	// 494
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 495
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 496
	{
		ZVEHCOMP_ADD_COMPONENT(1, 2, 3, 6),
		ZVEHCOMP_ADD_COMPONENT(7, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(11, 17, 19, 20),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 0, 0, 0),
	},
	// 497
	{
	},
	// 498
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 499
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 500
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 13),
		ZVEHCOMP_ADD_COMPONENT(19, 20, 21, 24),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 0, 0),
	},
	// 501
	{
	},
	// 502
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 503
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 504
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 505
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 506
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 507
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 508
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 509
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 510
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 511
	{
	},
	// 512
	{
	},
	// 513
	{
	},
	// 514
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 515
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 516
	{
		ZVEHCOMP_ADD_COMPONENT(0, 2, 4, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 15),
		ZVEHCOMP_ADD_COMPONENT(16, 17, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 21, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 517
	{
		ZVEHCOMP_ADD_COMPONENT(2, 3, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 16, 17),
		ZVEHCOMP_ADD_COMPONENT(18, 19, 20, 23),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 142, 143),
		ZVEHCOMP_ADD_COMPONENT(144, 145, 0, 0),
	},
	// 518
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 5, 6),
		ZVEHCOMP_ADD_COMPONENT(7, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(13, 17, 18, 20),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 519
	{
	},
	// 520
	{
	},
	// 521
	{
	},
	// 522
	{
	},
	// 523
	{
	},
	// 524
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 525
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 526
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 527
	{
		ZVEHCOMP_ADD_COMPONENT(1, 7, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 14, 15, 17),
		ZVEHCOMP_ADD_COMPONENT(18, 20, 21, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 528
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 529
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 6, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 11),
		ZVEHCOMP_ADD_COMPONENT(12, 17, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 23, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 530
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 531
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 532
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 533
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 534
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 100, 101, 106),
		ZVEHCOMP_ADD_COMPONENT(122, 123, 124, 125),
		ZVEHCOMP_ADD_COMPONENT(126, 127, 178, 179),
		ZVEHCOMP_ADD_COMPONENT(180, 185, 0, 0),
	},
	// 535
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 109, 110, 113),
		ZVEHCOMP_ADD_COMPONENT(114, 115, 116, 117),
		ZVEHCOMP_ADD_COMPONENT(118, 119, 120, 121),
		0
	},
	// 536
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 103, 104, 105),
		ZVEHCOMP_ADD_COMPONENT(107, 108, 128, 181),
		ZVEHCOMP_ADD_COMPONENT(182, 183, 184, 0),
	},
	// 537
	{
	},
	// 538
	{
	},
	// 539
	{
	},
	// 540
	{
		ZVEHCOMP_ADD_COMPONENT(1, 4, 6, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 17),
		ZVEHCOMP_ADD_COMPONENT(18, 19, 20, 23),
		ZVEHCOMP_ADD_COMPONENT(24, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 541
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 542
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 14),
		ZVEHCOMP_ADD_COMPONENT(15, 18, 19, 20),
		ZVEHCOMP_ADD_COMPONENT(21, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 144),
		ZVEHCOMP_ADD_COMPONENT(145, 0, 0, 0),
	},
	// 543
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 544
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 545
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 546
	{
		ZVEHCOMP_ADD_COMPONENT(1, 2, 4, 6),
		ZVEHCOMP_ADD_COMPONENT(7, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(17, 18, 19, 23),
		ZVEHCOMP_ADD_COMPONENT(24, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 547
	{
		ZVEHCOMP_ADD_COMPONENT(0, 3, 8, 9),
		ZVEHCOMP_ADD_COMPONENT(10, 16, 18, 19),
		ZVEHCOMP_ADD_COMPONENT(20, 21, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		ZVEHCOMP_ADD_COMPONENT(142, 143, 0, 0),
	},
	// 548
	{
	},
	// 549
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 11, 12),
		ZVEHCOMP_ADD_COMPONENT(17, 18, 19, 20),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 550
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 4, 5),
		ZVEHCOMP_ADD_COMPONENT(6, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(18, 19, 20, 23),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 142, 143),
		ZVEHCOMP_ADD_COMPONENT(144, 145, 0, 0),
	},
	// 551
	{
		ZVEHCOMP_ADD_COMPONENT(2, 3, 5, 6),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 16),
		ZVEHCOMP_ADD_COMPONENT(18, 19, 20, 21),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 0),
	},
	// 552
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 553
	{
	},
	// 554
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 555
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 556
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 557
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 558
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 88, 89),
		ZVEHCOMP_ADD_COMPONENT(90, 91, 92, 93),
		ZVEHCOMP_ADD_COMPONENT(94, 95, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 163, 164, 165),
		ZVEHCOMP_ADD_COMPONENT(166, 167, 168, 0),
	},
	// 559
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(65, 66, 67, 68),
		ZVEHCOMP_ADD_COMPONENT(69, 70, 71, 72),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 158, 159, 160),
		ZVEHCOMP_ADD_COMPONENT(161, 162, 173, 0),
	},
	// 560
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(26, 27, 28, 29),
		ZVEHCOMP_ADD_COMPONENT(30, 31, 32, 33),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 138, 139, 140),
		ZVEHCOMP_ADD_COMPONENT(141, 169, 170, 0),
	},
	// 561
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(55, 56, 57, 58),
		ZVEHCOMP_ADD_COMPONENT(59, 60, 61, 62),
		ZVEHCOMP_ADD_COMPONENT(63, 64, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 154),
		ZVEHCOMP_ADD_COMPONENT(155, 156, 157, 0),
	},
	// 562
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(34, 35, 36, 37),
		ZVEHCOMP_ADD_COMPONENT(38, 39, 40, 41),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 146, 147, 148),
		ZVEHCOMP_ADD_COMPONENT(149, 171, 172, 0),
	},
	// 563
	{
	},
	// 564
	{
	},
	// 565
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(45, 46, 47, 48),
		ZVEHCOMP_ADD_COMPONENT(49, 50, 51, 52),
		ZVEHCOMP_ADD_COMPONENT(53, 54, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 150),
		ZVEHCOMP_ADD_COMPONENT(151, 152, 153, 0),
	},
	// 566
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 567
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 102, 129, 130),
		ZVEHCOMP_ADD_COMPONENT(131, 132, 133, 186),
		ZVEHCOMP_ADD_COMPONENT(187, 188, 189, 0),
	},
	// 568
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 569
	{
	},
	// 570
	{
	},
	// 571
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 572
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 573
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 574
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 575
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(42, 43, 44, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		ZVEHCOMP_ADD_COMPONENT(99, 174, 175, 176),
		ZVEHCOMP_ADD_COMPONENT(177, 0, 0, 0),
	},
	// 576
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 134, 135, 136),
		ZVEHCOMP_ADD_COMPONENT(137, 190, 191, 192),
		ZVEHCOMP_ADD_COMPONENT(193, 0, 0, 0),
	},
	// 577
	{
	},
	// 578
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 579
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 580
	{
		ZVEHCOMP_ADD_COMPONENT(1, 6, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 17, 18),
		ZVEHCOMP_ADD_COMPONENT(20, 23, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		0
	},
	// 581
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 582
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 583
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 584
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 585
	{
		ZVEHCOMP_ADD_COMPONENT(1, 3, 6, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 13),
		ZVEHCOMP_ADD_COMPONENT(17, 18, 19, 20),
		ZVEHCOMP_ADD_COMPONENT(23, 25, 73, 74),
		ZVEHCOMP_ADD_COMPONENT(75, 76, 77, 78),
		ZVEHCOMP_ADD_COMPONENT(79, 80, 81, 82),
		ZVEHCOMP_ADD_COMPONENT(83, 84, 85, 87),
		ZVEHCOMP_ADD_COMPONENT(96, 97, 98, 142),
		ZVEHCOMP_ADD_COMPONENT(143, 144, 145, 0),
	},
	// 586
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 587
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 588
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 589
	{
		ZVEHCOMP_ADD_COMPONENT(0, 4, 5, 6),
		ZVEHCOMP_ADD_COMPONENT(7, 8, 9, 10),
		ZVEHCOMP_ADD_COMPONENT(13, 16, 17, 18),
		ZVEHCOMP_ADD_COMPONENT(20, 24, 25, 73),
		ZVEHCOMP_ADD_COMPONENT(74, 75, 76, 77),
		ZVEHCOMP_ADD_COMPONENT(78, 79, 80, 81),
		ZVEHCOMP_ADD_COMPONENT(82, 83, 84, 85),
		ZVEHCOMP_ADD_COMPONENT(87, 96, 97, 98),
		ZVEHCOMP_ADD_COMPONENT(144, 145, 0, 0),
	},
	// 590
	{
	},
	// 591
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 592
	{
	},
	// 593
	{
	},
	// 594
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 595
	{
	},
	// 596
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 597
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 598
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 599
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 600
	{
		ZVEHCOMP_ADD_COMPONENT(4, 5, 6, 7),
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 13),
		ZVEHCOMP_ADD_COMPONENT(17, 18, 20, 22),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 0, 0),
	},
	// 601
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 602
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 603
	{
		ZVEHCOMP_ADD_COMPONENT(1, 6, 7, 8),
		ZVEHCOMP_ADD_COMPONENT(9, 10, 17, 18),
		ZVEHCOMP_ADD_COMPONENT(19, 20, 23, 24),
		ZVEHCOMP_ADD_COMPONENT(25, 73, 74, 75),
		ZVEHCOMP_ADD_COMPONENT(76, 77, 78, 79),
		ZVEHCOMP_ADD_COMPONENT(80, 81, 82, 83),
		ZVEHCOMP_ADD_COMPONENT(84, 85, 87, 96),
		ZVEHCOMP_ADD_COMPONENT(97, 98, 142, 143),
		ZVEHCOMP_ADD_COMPONENT(144, 145, 0, 0),
	},
	// 604
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 605
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 606
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 607
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 608
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 609
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 610
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	},
	// 611
	{
		ZVEHCOMP_ADD_COMPONENT(8, 9, 10, 25),
		ZVEHCOMP_ADD_COMPONENT(73, 74, 75, 76),
		ZVEHCOMP_ADD_COMPONENT(77, 78, 79, 80),
		ZVEHCOMP_ADD_COMPONENT(81, 82, 83, 84),
		ZVEHCOMP_ADD_COMPONENT(85, 87, 96, 97),
		ZVEHCOMP_ADD_COMPONENT(98, 0, 0, 0),
	}
};

/*
	Component type functions
*/

stock GetComponentTypeId(name[])
{
	for (new i = 0; i < sizeof(gComponentType); i++) {
		if (strcmp(gComponentType[i], name, true) == 0) {
			return i;
		}
	}

	return INVALID_COMPONENT_ID;
}

stock GetComponentTypeName(type, name[], size = sizeof(name))
{
	if (type < 0 || type >= sizeof(gComponentType)) {
		return 0;
	}

	return strunpack(name, gComponentType[type], size);
}

stock GetVehicleCompatibleTypes(model, array[MAX_COMPONENT_TYPES], &array_size)
{
	new
		components[MAX_COMPONENTS],
		components_size;

	new isok = GetVehicleCompatibleUpgrades(model, components, components_size);
	if (!isok) {
		return 0;
	}

	new
		type_id,
		bool:is_type_exist[MAX_COMPONENT_TYPES];

	array_size = 0;

	for (new i = 0; i < components_size; i++) {
		type_id = GetVehicleComponentType(components[i]);

		if (!is_type_exist[type_id]) {
			is_type_exist[type_id] = true;

			array[array_size++] = type_id;
		}
	}

	return 1;
}

/*
	Component upgrade functions
*/

stock GetComponentName(componentid, cname[], size = sizeof(cname))
{
	new index = componentid - 1000;
	if (index < 0 || index >= sizeof(gComponentName)) {
		return 0;
	}

	return strunpack(cname, gComponentName[index], size);
}

stock GetVehicleCompatibleUpgrades(model, array[MAX_COMPONENTS], &array_size)
{
	if (model < 400 || model > 611) {
		return 0;
	}

	new
		index;

	index = model - 400;
	array_size = 0;

	for (new i = 0; i < MAX_COMPONENTS; i++) {
		if (gComponents[index]{i} == 0) {
			break;
		}

		array[array_size++] = gComponents[index]{i} + 1000;
	}

	return 1;
}

stock IsVehicleUpgradeCompatible(model, componentid)
{
	if (model < 400 || model > 611) {
		return 0;
	}

	new
		index,
		component_value;

	index = model - 400;
	component_value = componentid - 1000;

	for (new i = 0; i < MAX_COMPONENTS; i++) {
		if (gComponents[index]{i} == component_value) {
			return 1;
		}
	}

	return 0;
}
